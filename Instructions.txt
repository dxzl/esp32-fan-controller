To enter your router's login info you must be connected in AP (Access Point) WiFi mode:
Flip switch to AP mode. Wait 15 seconds then connect your phone's WiFi to SSID: dts7. The password is: 1234567890. Open your web-browser and type 192.168.7.7 into the address-field.The fan-controller's web-page will be displayed. Tap "Next=>>" at the top to go to the next page. Enter your WiFi router's SSID and password in the boxes and tap Submit.

Now flip the WiFi switch to STA mode. The Smart-Outlet should log in to your router after 15 seconds or so. Now connect your phone's WiFI to your router (you can't use your mobile-data connection). Type http://dts7.local in your web-browser's address-field.

To reset to factory defaults, flip switch to AP mode and log-in as described above. In the Host Name field at the top, type: "c reset parms" (without quotes) and tap the Submit button. The WiFi connection will be reset but your phone should automatically reconnect after a delay. You will need to re-enter your router's WiFi  SSID and password and if you had entered a LOCK password that will be unset and the Smart Outlet is unlocked.

Host Name field special commands:
c reset slots
c reset parms
c wifi toggle
c wifi restore
c wifi disable
c version
c info
c lock (lock the interface when no passphrase is set)
c lock "passphrase" "passphrase" (set passphrase)
c lock "old passphrase" "new passphrase" (change passphrase)
c lock "passphrase" "" (remove the passphrase and lock - use "c unlock" to unlock)
c lock "passphrase"
c unlock (unlock the interface when no passphrase is set)
c unlock "passphrase"
c update (login: dts, pass: update)

Main firmware update: fc.bin,
Web-server update: fc.spiffs.bin

To build the software, use the Arduino IDE.

In File->Preferences, add Additional boards URLs:
https://dl.espressif.com/dl/package_esp32_dev_index.json
https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_dev_index.json

Go to the Boards Manager and search for "esp" and add ESP32 boards.
Select "ESP32 Dev Module" as your board. Select Partition Scheme "Minimal SPIFFS".
Select Sketch->Export Compiled Binary.
Double-click fixname.bat. You should have the file "fc.bin", which is the main firmware update file.
Go into the DTS_SMART_FAN_CONTROLLER\spiffs folder and double-click fcspiffs.bat to make fc.spiffs.bin.
fc.spiffs.bin bundles all of the web-server HTML and CSS files.

To reflash the software, flip the fan-controller's WiFi switch to STA mode (toward the LED lights). Assuming you already entered your router's SSID and PASS (see above), it connects.

On PC or phone, connect to your WiFi router. Unless you changed the host-name, you access the web-interface via "http://dts7.local" typed into your browser's address-field.

To update the firmware, have both .bin files handy on your phone or computer and in the Host Name field, enter "c update" and submit. Enter Login: "dts7" and Password: "1234567890". A new box comes up. Click on "Choose file..." and select fc.bin to flash the firmware - wait for the device update and reboot, clicking "OK" as needed. Now do the other .bin file, fc.spiffs.bin if you want to update the web-interface.

----------------------------------------------
Troubleshooting:
If the web-interface is not working, make sure the Windows 10 firewall is not blocking Java. If you use a router and access via WiFi, or LAN for various devices - probably you want to set your network Private. To do this, right-click on Start in the lower left corner and Search for "Network status". Click WiFi and then click on the network you are connected to. Choose Private and close window.  Now search for Firewall. Click Windows Defender Firewall. Click "Allow an app through..."  scroll to Java and make sure Private is checked.

- Scott Swift (Inventor & Engineer, scottswift777@gmail.com).
- Thanks to many websites, too many to mention, to Rui Santos for his ESP32 tutorials, howtogeek, stackoverflow, Etc.
